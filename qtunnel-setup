#!/bin/bash
export PATH="$PATH:/usr/sbin:/sbin:/bin"
[ `id -u` -eq 0 ] || exit 1
. /usr/lib/qubes/init/functions

qtunpath=/rw/config/qtunnel
uppath=$qtunpath/tunneluserpwd.txt
tmppath="/tmp/"`basename $uppath`


do_userpass () {
    echo
    read -p  "VPN/tunnel username: " username
    read -s -p "VPN/tunnel password: " upassword
    echo
    echo
    echo "$username" >$tmppath.tmp
    echo "$upassword" >>$tmppath.tmp
    chmod 600 $tmppath.tmp
    mv $tmppath.tmp $tmppath
    cp -a $tmppath $uppath
    echo -e "\nLogin info saved to $uppath"
    sleep 1s
    echo
}

# needs source dir passed as first arg
firewall_link () {
    if iptables -L QBS-FORWARD >/dev/null; then
    # firewall for Qubes 4
        mkdir -p /rw/config/qubes-firewall.d
        ln -s -f $1/tunnel-restrict-firewall \
    /rw/config/qubes-firewall.d/90_tunnel-restrict
    else
        ln -s -f $1/tunnel-restrict-firewall \
    /rw/config/qubes-firewall-user-script
    fi
}


case "$1" in

--config)
    if is_proxyvm ; then
        mkdir -p $qtunpath
        firewall_link /usr/lib/qubes
        do_userpass
        echo "Done!"
        if [ ! -e $qtunpath/qtunnel.conf ]; then
            echo "Next, copy or link your config file to $qtunpath/qtunnel.conf"
        fi
    else
        echo "Error: Not a proxyVM. Please check instructions."
        exit 1
    fi
;;

--pre-start)
    if [ ! -f $uppath ]; then
        if [ ! -f /tmp/qtunnel-askpass ]; then
            systemd-run --unit=qtunnel-askpass -E DISPLAY=:0 sh -c \
            'sleep 2s; /usr/bin/xterm \
            -T "Tunnel Login" -e /usr/lib/qubes/qtunnel-setup --xterm'
        fi
    elif [ ! -f $tmppath ]; then
        cp -a $uppath $tmppath.tmp
        mv $tmppath.tmp $tmppath
        sync; sleep 2s
        su - -c 'notify-send "$(hostname): Ready to start link."' user
    fi
;;

--xterm)
    touch /tmp/qtunnel-askpass
    do_userpass
;;
esac

